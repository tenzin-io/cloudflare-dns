name: Terraform

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  
permissions:
  id-token: write
  contents: read
  
jobs:
  plan-and-validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      
      - uses: hashicorp/vault-action@v2
        id: vault_secrets
        with:
          url: https://vault.tenzin.io
          role: actions-runner-role-16f812964f3975cea478477e77bf82d2
          method: jwt
          exportToken: true
          secrets: |
            github/data/cloudflare api_token | CLOUDFLARE_API_TOKEN;

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          
      - name: Run Terraform Init
        run: terraform init
        
      - name: Run Terraform Format
        run: terraform fmt -check

      - name: Run Terraform Validate
        run: terraform validate -no-color

      - name: Run Terraform Plan
        run: terraform plan -no-color

  apply:
    needs: [plan-and-validate]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - uses: hashicorp/vault-action@v2
        id: vault_secrets
        with:
          url: https://vault.tenzin.io
          role: actions-runner-role-16f812964f3975cea478477e77bf82d2
          method: jwt
          exportToken: true
          secrets: |
            github/data/cloudflare api_token | CLOUDFLARE_API_TOKEN;
     
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          
      - name: Run Terraform Init
        run: terraform init

      - name: Run Terraform Apply
        run: terraform apply -no-color -auto-approve
